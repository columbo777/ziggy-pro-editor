//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.237
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XPackage
{
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XPackage.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }

        internal static System.Drawing.Bitmap dash
        {
            get
            {
                object obj = ResourceManager.GetObject("dash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to                     GNU GENERAL PUBLIC LICENSE
        ///                       Version 3, 29 June 2007
        ///
        /// Copyright (C) 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///                            Preamble
        ///
        ///  The GNU General Public License is a free, copyleft license for
        ///software and other kinds of works.
        ///
        ///  The licenses for most software and other practical works are designed
        ///to [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GPL30
        {
            get
            {
                return ResourceManager.GetString("GPL30", resourceCulture);
            }
        }

        internal static byte[] KV
        {
            get
            {
                object obj = ResourceManager.GetObject("KV", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static System.Drawing.Bitmap Locked
        {
            get
            {
                object obj = ResourceManager.GetObject("Locked", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        internal static System.Drawing.Bitmap NoImage
        {
            get
            {
                object obj = ResourceManager.GetObject("NoImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        internal static System.Drawing.Icon paw
        {
            get
            {
                object obj = ResourceManager.GetObject("paw", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }

        internal static byte[] proconfile
        {
            get
            {
                object obj = ResourceManager.GetObject("proconfile", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static System.Drawing.Bitmap rockband
        {
            get
            {
                object obj = ResourceManager.GetObject("rockband", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        internal static System.Drawing.Bitmap rockband2
        {
            get
            {
                object obj = ResourceManager.GetObject("rockband2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }

        internal static byte[] song_ids
        {
            get
            {
                object obj = ResourceManager.GetObject("song_ids", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] upgrades
        {
            get
            {
                object obj = ResourceManager.GetObject("upgrades", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] XK0
        {
            get
            {
                object obj = ResourceManager.GetObject("XK0", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] XK1
        {
            get
            {
                object obj = ResourceManager.GetObject("XK1", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] XK2
        {
            get
            {
                object obj = ResourceManager.GetObject("XK2", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] XK3
        {
            get
            {
                object obj = ResourceManager.GetObject("XK3", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] XK4
        {
            get
            {
                object obj = ResourceManager.GetObject("XK4", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] XK5
        {
            get
            {
                object obj = ResourceManager.GetObject("XK5", resourceCulture);
                return ((byte[])(obj));
            }
        }

        internal static byte[] XK6
        {
            get
            {
                object obj = ResourceManager.GetObject("XK6", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
